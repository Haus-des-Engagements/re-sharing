# Generated by Django 5.1.1 on 2024-12-29 09:14

import django.contrib.postgres.constraints
import django.contrib.postgres.indexes
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.contrib.postgres.operations import BtreeGistExtension


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0002_initial'),
        ('organizations', '0001_initial'),
        ('resources', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        BtreeGistExtension(),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings_of_user', related_query_name='booking_of_user', to=settings.AUTH_USER_MODEL, verbose_name='Initial Booking User'),
        ),
        migrations.AddField(
            model_name='bookingmessage',
            name='booking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookingmessages_of_booking', related_query_name='bookingmessage_of_booking', to='bookings.booking', verbose_name='Booking'),
        ),
        migrations.AddField(
            model_name='bookingmessage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookingmessages_of_user', related_query_name='bookingmessage_of_user', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='recurrencerule',
            name='compensation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rrules_of_compensation', related_query_name='rrule_of_compensation', to='resources.compensation', verbose_name='Compensation'),
        ),
        migrations.AddField(
            model_name='recurrencerule',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rrules_of_organization', related_query_name='rrule_of_organization', to='organizations.organization', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='recurrencerule',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rrules_of_resource', related_query_name='rrule_of_resource', to='resources.resource', verbose_name='Resource'),
        ),
        migrations.AddField(
            model_name='recurrencerule',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rrules_of_user', related_query_name='rrule_of_user', to=settings.AUTH_USER_MODEL, verbose_name='Initial Booking User'),
        ),
        migrations.AddField(
            model_name='booking',
            name='recurrence_rule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookings_of_recurrencerule', related_query_name='booking_of_recurrencerule', to='bookings.recurrencerule', verbose_name='Recurrence rule'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=django.contrib.postgres.indexes.GistIndex(fields=['timespan'], name='bookings_bo_timespa_b881a5_gist'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(condition=models.Q(('status', 2)), expressions=[('timespan', '&&'), ('resource', '=')], name='exclude_overlapping_reservations', violation_error_message='The requested timespan overlaps with an existing booking for this resource. Please chose another timespan.'),
        ),
    ]
