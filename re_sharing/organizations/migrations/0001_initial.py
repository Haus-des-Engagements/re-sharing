# Generated by Django 5.1.1 on 2024-12-29 09:14

import django_extensions.db.fields
import re_sharing.organizations.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BookingPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('role', models.IntegerField(choices=[(1, 'Administrator'), (2, 'Booker')], default=2, verbose_name='Role')),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'Confirmed'), (3, 'Rejected')], default=1, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Booking permission',
                'verbose_name_plural': 'Booking permissions',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('email_type', models.CharField(choices=[('booking_confirmation', 'Booking confirmation'), ('booking_cancellation', 'Booking cancellation'), ('booking_reminder', 'Booking reminder'), ('recurrence_confirmation', 'Recurrence confirmation'), ('recurrence_cancellation', 'Recurrence cancellation'), ('organization_confirmation', 'Organization confirmation'), ('organization_cancellation', 'Organization cancellation'), ('manager_new_organization', 'Manager new organization'), ('manager_new_recurrence', 'Manager new recurrence'), ('manager_new_booking', 'Manager new booking'), ('new_booking_message', 'New booking message')], max_length=50, unique=True)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('active', models.BooleanField(default=False, verbose_name='Send this email out.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=160, verbose_name='Name')),
                ('description', models.CharField(help_text='Describe shortly what your organization does.', max_length=2048, verbose_name='Description')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name', unique=True)),
                ('street_and_housenb', models.CharField(max_length=56, verbose_name='Street and housenumber')),
                ('zip_code', models.CharField(max_length=12, verbose_name='Zip Code')),
                ('city', models.CharField(max_length=24, verbose_name='City')),
                ('email', models.EmailField(max_length=64, verbose_name='E-Mail')),
                ('send_booking_emails_only_to_organization', models.BooleanField(default=False, verbose_name='All mails for bookings will be send to the organization and not to the booking user.')),
                ('phone', models.CharField(max_length=32, verbose_name='Phone number')),
                ('website', models.CharField(blank=True, max_length=128, verbose_name='Website')),
                ('legal_form', models.IntegerField(choices=[(1, 'Without legal form'), (2, 'Registered association'), (3, 'Not registered association'), (4, 'Foundation'), (5, 'Civil law company'), (6, 'Limited company'), (7, 'Cooperative'), (8, 'Individual entrepreneur'), (9, 'Other')], verbose_name='Legal form')),
                ('other_legal_form', models.CharField(blank=True, max_length=160, verbose_name='Other legal form')),
                ('is_charitable', models.BooleanField(default=False, help_text='Only applicable if you have a valid certificate of tax exemption.', verbose_name='We are a charitable organization.')),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'Confirmed'), (3, 'Rejected')], default=1, verbose_name='Status')),
                ('area_of_activity', models.IntegerField(choices=[(1, 'Sport and exercise'), (2, 'Culture and music'), (3, 'Social area'), (4, 'School or nursery area'), (5, 'Church or religious area'), (6, 'Leisure and social interaction'), (7, 'Environment, nature protection or animal rights'), (8, 'Youth work outside school or adult education'), (9, 'Politics and political interest groups'), (10, 'Accident or ambulance service or voluntary fire brigade'), (11, 'Health area'), (12, 'Professional interest groups outside work'), (13, 'Justice and criminality'), (14, 'Area not yet mentioned')], verbose_name='Main area of activity')),
                ('is_coworking', models.BooleanField(default=False, help_text='Only applicable if you are currently co-working in the HdE', verbose_name='Co-Worker:in')),
                ('is_public', models.BooleanField(default=True, help_text="If checked, we'll show the following information to others: name, description, city, website, area of activity", verbose_name='Organization information is publicly visible')),
                ('values_approval', models.BooleanField(verbose_name='Approval of values')),
                ('entitled', models.BooleanField(verbose_name='Approval of entitlement')),
                ('notes', models.CharField(blank=True, help_text='Internal notes', max_length=512, verbose_name='Notes')),
                ('usage_agreement', models.FileField(blank=True, null=True, storage=re_sharing.organizations.models.select_private_storage, upload_to='usage_agreements/', validators=[re_sharing.organizations.models.validate_is_pdf], verbose_name='Usage agreement')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=160, verbose_name='Name')),
                ('description', models.CharField(max_length=2048, verbose_name='Description')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name', unique=True)),
                ('show_on_organization_creation', models.BooleanField(default=False, verbose_name='Show on organization creation')),
                ('show_on_organization_creation_wording', models.CharField(blank=True, max_length=256, verbose_name='This will be displayed in the form')),
            ],
            options={
                'verbose_name': 'Organization group',
                'verbose_name_plural': 'Organization groups',
                'ordering': ['id'],
            },
        ),
    ]
