# Generated by Django 5.1.1 on 2025-01-05 08:16

import django.utils.timezone
import django_extensions.db.fields
import re_sharing.users.managers
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('organizations', '0001_initial'),
        ('resources', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('first_name', models.CharField(verbose_name='First Name')),
                ('last_name', models.CharField(verbose_name='Last Name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['first_name', 'last_name'])),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('organizations', models.ManyToManyField(blank=True, related_name='users_of_organization', related_query_name='user_of_organization', through='organizations.BookingPermission', to='organizations.organization', verbose_name='Organizations')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['email'],
            },
            managers=[
                ('objects', re_sharing.users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=160, verbose_name='Name')),
                ('description', models.CharField(max_length=2048, verbose_name='Description')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name', unique=True)),
                ('auto_confirm_organizations', models.BooleanField(default=False, verbose_name='Auto confirm organizations on creation')),
                ('auto_confirmed_resources', models.ManyToManyField(blank=True, related_name='autoconfirmedresources_of_usergroup', related_query_name='autoconfirmedresource_of_usergroup', to='resources.resource', verbose_name='Auto confirmed resources')),
                ('users', models.ManyToManyField(related_name='usergroups_of_user', related_query_name='usergroup_of_user', to=settings.AUTH_USER_MODEL, verbose_name='Users')),
            ],
            options={
                'verbose_name': 'User group',
                'verbose_name_plural': 'User groups',
                'ordering': ['id'],
            },
        ),
    ]
