# Generated by Django 5.1.1 on 2025-01-05 08:16

import django.core.validators
import django.db.models.deletion
import django_extensions.db.fields
import tinymce.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name', verbose_name='Slug')),
                ('instructions', models.TextField(max_length=512, verbose_name='Instructions')),
            ],
            options={
                'verbose_name': 'Access',
                'verbose_name_plural': 'Accesses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AccessCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('code', models.CharField(max_length=256, verbose_name='Code')),
                ('validity_start', models.DateTimeField(verbose_name='Validity start')),
                ('access', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesscodes_of_access', related_query_name='accesscode_of_access', to='resources.access', verbose_name='Access')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizations_of_access', related_query_name='organization_of_access', to='organizations.organization', verbose_name='Organization')),
            ],
            options={
                'verbose_name': 'Access code',
                'verbose_name_plural': 'Access codes',
                'ordering': ['validity_start'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=160, verbose_name='Title')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('description', tinymce.models.HTMLField(blank=True, max_length=5000, verbose_name='Description')),
                ('accessibility', tinymce.models.HTMLField(blank=True, max_length=5000, verbose_name='Accessibility')),
                ('square_meters', models.PositiveIntegerField(blank=True, null=True, verbose_name='Square Meters')),
                ('max_persons', models.PositiveIntegerField(default=5, verbose_name='Maximum Number of Persons')),
                ('bookable_times', models.CharField(blank=True, max_length=128, verbose_name='General Bookable Times')),
                ('included_equipment', models.TextField(blank=True, max_length=512, verbose_name='Included Equipment')),
                ('address', models.CharField(max_length=256, verbose_name='Address')),
                ('access', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resources_of_access', related_query_name='resource_of_access', to='resources.access', verbose_name='Access')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Compensation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('conditions', models.CharField(blank=True, max_length=512, verbose_name='Conditions')),
                ('hourly_rate', models.IntegerField(blank=True, null=True, verbose_name='Hourly Rate')),
                ('resource', models.ManyToManyField(related_name='compensations_of_resource', related_query_name='compensation_of_resource', to='resources.resource', verbose_name='Resource')),
            ],
            options={
                'verbose_name': 'Compensation',
                'verbose_name_plural': 'Compensations',
            },
        ),
        migrations.CreateModel(
            name='ResourceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('image', models.ImageField(upload_to='resource_images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'])])),
                ('description', models.CharField(blank=True, max_length=250, verbose_name='Description')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resourceimages_of_resource', related_query_name='resourceimage_of_resource', to='resources.resource', verbose_name='Resource')),
            ],
            options={
                'verbose_name': 'Resource Image',
                'verbose_name_plural': 'Resource Images',
            },
        ),
    ]
